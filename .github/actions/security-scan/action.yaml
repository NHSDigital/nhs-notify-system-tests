name: Security scan
description: "Run security scan"

inputs:
  environment:
    description: "Web gateway subdomain to test"
    required: false
    default: main
  iamEnvironment:
    description: "IAM subdomain to test"
    required: false
    default: main
  github_token:
    description: GitHub access token
    required: true
  github_run_id:
    description: GitHub Run ID the action is being run from
    required: true
  github_repository:
    description: GitHub Repository the action is being run from (owner/repo-name format)
    required: true

runs:
  using: "composite"

  steps:
    - name: "Repo setup"
      shell: bash
      run: |
        npm ci

    - name: Download setup JSON artifact (auth service)
      env:
        GH_TOKEN: ${{ inputs.github_token }}
      run: |
        ARTIFACT_NAME="auth-state"
        DEST_PATH="./tests/security/lifecycle/auth"
        echo "Downloading artifact '$ARTIFACT_NAME' to $DEST_PATH ..."
        gh run download "${{ inputs.github_run_id }}" --repo "${{ inputs.github_repository }}" --name "$ARTIFACT_NAME" --dir "$DEST_PATH"
      shell: bash

    - name: Run test - security scan
      id: test
      shell: bash
      env:
        TARGET_ENVIRONMENT: ${{ inputs.environment }}
      run: |
        set +e
        make test-security
        echo "exit_code=$?" >> $GITHUB_OUTPUT

    - name: Archive security test results
      uses: actions/upload-artifact@v4
      with:
        name: Security test report
        path: "tests/security/zap-out-*.html"

    - name: Archive playwright test results
      uses: actions/upload-artifact@v4
      with:
        name: Playwright test report
        path: "tests/security/playwright-report"

    - name: Fail workflow on test failure
      shell: bash
      if: steps.test.outputs.exit_code != 0
      run: |
        echo "Security tests failed with exit code ${{ steps.test.outputs.exit_code }}"
        exit 1
